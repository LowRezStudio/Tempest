// @generated by protobuf-ts 2.11.1 with parameter server_none
// @generated from protobuf file "lobby/lobby_service.proto" (package "tempest.lobby", syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { ChampionSelectRequest } from "./champion_select_request";
import { ChampionSelectResponse } from "./champion_select_response";
import { JoinLobbyRequest } from "./join_lobby_request";
import { JoinLobbyResponse } from "./join_lobby_response";
import { LeaveLobbyRequest } from "./leave_lobby_request";
import { LeaveLobbyResponse } from "./leave_lobby_response";
import { LobbyEvent } from "./lobby_event";
import { MapVoteRequest } from "./map_vote_request";
import { MapVoteResponse } from "./map_vote_response";
import { ReceiveLobbyEventsRequest } from "./receive_lobby_events_request";
import { SendChatMessageRequest } from "./send_chat_message_request";
import { SendChatMessageResponse } from "./send_chat_message_response";
/**
 * @generated ServiceType for protobuf service tempest.lobby.Lobby
 */
export const Lobby = new ServiceType("tempest.lobby.Lobby", [
	{ name: "JoinLobby", options: {}, I: JoinLobbyRequest, O: JoinLobbyResponse },
	{ name: "LeaveLobby", options: {}, I: LeaveLobbyRequest, O: LeaveLobbyResponse },
	{ name: "ReceiveLobbyEvents", serverStreaming: true, options: {}, I: ReceiveLobbyEventsRequest, O: LobbyEvent },
	{ name: "ChampionSelect", options: {}, I: ChampionSelectRequest, O: ChampionSelectResponse },
	{ name: "MapVote", options: {}, I: MapVoteRequest, O: MapVoteResponse },
	{ name: "SendChatMessage", options: {}, I: SendChatMessageRequest, O: SendChatMessageResponse },
]);
