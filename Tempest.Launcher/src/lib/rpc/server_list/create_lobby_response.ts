// @generated by protobuf-ts 2.11.1 with parameter server_none
// @generated from protobuf file "server_list/create_lobby_response.proto" (package "tempest.server_list", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CreateLobbyError } from "./create_lobby_error";
import { CreateLobbySuccess } from "./create_lobby_success";
/**
 * @generated from protobuf message tempest.server_list.CreateLobbyResponse
 */
export interface CreateLobbyResponse {
	/**
	 * @generated from protobuf oneof: result
	 */
	result: {
		oneofKind: "success";
		/**
		 * @generated from protobuf field: tempest.server_list.CreateLobbySuccess success = 1
		 */
		success: CreateLobbySuccess;
	} | {
		oneofKind: "error";
		/**
		 * @generated from protobuf field: tempest.server_list.CreateLobbyError error = 2
		 */
		error: CreateLobbyError;
	} | {
		oneofKind: undefined;
	};
}
// @generated message type with reflection information, may provide speed optimized methods
class CreateLobbyResponse$Type extends MessageType<CreateLobbyResponse> {
	constructor() {
		super("tempest.server_list.CreateLobbyResponse", [
			{ no: 1, name: "success", kind: "message", oneof: "result", T: () => CreateLobbySuccess },
			{ no: 2, name: "error", kind: "message", oneof: "result", T: () => CreateLobbyError },
		]);
	}
	create(value?: PartialMessage<CreateLobbyResponse>): CreateLobbyResponse {
		const message = globalThis.Object.create(this.messagePrototype!);
		message.result = { oneofKind: undefined };
		if (value !== undefined) {
			reflectionMergePartial<CreateLobbyResponse>(this, message, value);
		}
		return message;
	}
	internalBinaryRead(
		reader: IBinaryReader,
		length: number,
		options: BinaryReadOptions,
		target?: CreateLobbyResponse,
	): CreateLobbyResponse {
		let message = target ?? this.create(), end = reader.pos + length;
		while (reader.pos < end) {
			let [fieldNo, wireType] = reader.tag();
			switch (fieldNo) {
				case /* tempest.server_list.CreateLobbySuccess success */ 1:
					message.result = {
						oneofKind: "success",
						success: CreateLobbySuccess.internalBinaryRead(
							reader,
							reader.uint32(),
							options,
							(message.result as any).success,
						),
					};
					break;
				case /* tempest.server_list.CreateLobbyError error */ 2:
					message.result = {
						oneofKind: "error",
						error: CreateLobbyError.internalBinaryRead(reader, reader.uint32(), options, (message.result as any).error),
					};
					break;
				default:
					let u = options.readUnknownField;
					if (u === "throw") {
						throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
					}
					let d = reader.skip(wireType);
					if (u !== false) {
						(u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
					}
			}
		}
		return message;
	}
	internalBinaryWrite(message: CreateLobbyResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
		/* tempest.server_list.CreateLobbySuccess success = 1; */
		if (message.result.oneofKind === "success") {
			CreateLobbySuccess.internalBinaryWrite(
				message.result.success,
				writer.tag(1, WireType.LengthDelimited).fork(),
				options,
			).join();
		}
		/* tempest.server_list.CreateLobbyError error = 2; */
		if (message.result.oneofKind === "error") {
			CreateLobbyError.internalBinaryWrite(
				message.result.error,
				writer.tag(2, WireType.LengthDelimited).fork(),
				options,
			).join();
		}
		let u = options.writeUnknownFields;
		if (u !== false) {
			(u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
		}
		return writer;
	}
}
/**
 * @generated MessageType for protobuf message tempest.server_list.CreateLobbyResponse
 */
export const CreateLobbyResponse = new CreateLobbyResponse$Type();
