// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "lobby_service.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
import { LobbyService } from "./lobby_service";
import type { LobbyEvent } from "./lobby_service";
import type { ConnectLobbyRequest } from "./lobby_service";
import type { LeaveLobbyResponse } from "./lobby_service";
import type { LeaveLobbyRequest } from "./lobby_service";
import type { JoinLobbyResponse } from "./lobby_service";
import type { JoinLobbyRequest } from "./lobby_service";
/**
 * @generated from protobuf service LobbyService
 */
export interface ILobbyServiceClient {
	/**
	 * @generated from protobuf rpc: JoinLobby
	 */
	joinLobby(input: JoinLobbyRequest, options?: RpcOptions): UnaryCall<JoinLobbyRequest, JoinLobbyResponse>;
	/**
	 * @generated from protobuf rpc: LeaveLobby
	 */
	leaveLobby(input: LeaveLobbyRequest, options?: RpcOptions): UnaryCall<LeaveLobbyRequest, LeaveLobbyResponse>;
	/**
	 * @generated from protobuf rpc: ConnectLobby
	 */
	connectLobby(input: ConnectLobbyRequest, options?: RpcOptions): ServerStreamingCall<ConnectLobbyRequest, LobbyEvent>;
}
/**
 * @generated from protobuf service LobbyService
 */
export class LobbyServiceClient implements ILobbyServiceClient, ServiceInfo {
	typeName = LobbyService.typeName;
	methods = LobbyService.methods;
	options = LobbyService.options;
	constructor(private readonly _transport: RpcTransport) {
	}
	/**
	 * @generated from protobuf rpc: JoinLobby
	 */
	joinLobby(input: JoinLobbyRequest, options?: RpcOptions): UnaryCall<JoinLobbyRequest, JoinLobbyResponse> {
		const method = this.methods[0], opt = this._transport.mergeOptions(options);
		return stackIntercept<JoinLobbyRequest, JoinLobbyResponse>("unary", this._transport, method, opt, input);
	}
	/**
	 * @generated from protobuf rpc: LeaveLobby
	 */
	leaveLobby(input: LeaveLobbyRequest, options?: RpcOptions): UnaryCall<LeaveLobbyRequest, LeaveLobbyResponse> {
		const method = this.methods[1], opt = this._transport.mergeOptions(options);
		return stackIntercept<LeaveLobbyRequest, LeaveLobbyResponse>("unary", this._transport, method, opt, input);
	}
	/**
	 * @generated from protobuf rpc: ConnectLobby
	 */
	connectLobby(input: ConnectLobbyRequest, options?: RpcOptions): ServerStreamingCall<ConnectLobbyRequest, LobbyEvent> {
		const method = this.methods[2], opt = this._transport.mergeOptions(options);
		return stackIntercept<ConnectLobbyRequest, LobbyEvent>("serverStreaming", this._transport, method, opt, input);
	}
}
